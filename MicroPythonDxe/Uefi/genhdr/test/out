// This file was automatically generated by makeqstrdata.py

QDEF0(MP_QSTRnull, (const byte*)"\x00\x00\x00" "")
QDEF0(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF0(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF0(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF0(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF0(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF0(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF0(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF0(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF0(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF0(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF0(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF0(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF0(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF0(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF0(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF0(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF0(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF0(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF0(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF0(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF0(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF0(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF0(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF0(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF0(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF0(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF0(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF0(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF0(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF0(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF0(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF0(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF0(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF0(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF0(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF0(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF0(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF0(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF0(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF0(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF0(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF0(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF0(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF0(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF0(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF0(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF0(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF0(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF0(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF0(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF0(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF0(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF0(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF0(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF0(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF0(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF0(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF0(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF0(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF0(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF0(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF0(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF0(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF0(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF0(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF0(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF0(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF0(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF0(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF0(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF0(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF0(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF0(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF0(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF0(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF0(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF0(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF0(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF0(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF0(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF0(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF0(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF0(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF0(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF0(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF0(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF0(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF0(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF0(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF0(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF0(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF0(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF0(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF0(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF0(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF0(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF0(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF0(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF0(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF0(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF0(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF0(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF0(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF0(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF0(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF0(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF0(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF0(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF0(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF0(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF0(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF0(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF0(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF0(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF0(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF0(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF0(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF0(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF0(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF0(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF0(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF0(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF0(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF0(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF0(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF0(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF0(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF0(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF0(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF0(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF0(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF0(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF0(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF0(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF0(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF0(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF0(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF0(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF0(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF0(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF0(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF0(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF0(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF0(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF0(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF0(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF0(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF0(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF0(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF0(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF0(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF0(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF0(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF0(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF0(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF0(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF0(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF0(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF0(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF0(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF0(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF0(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF0(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF0(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF0(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF1(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF1(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF1(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF1(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF1(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF1(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF1(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF1(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF1(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF1(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF1(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF1(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF1(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF1(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF1(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF1(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF1(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF1(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF1(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF1(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF1(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF1(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF1(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF1(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
